<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        9JqHMLgmPivFblyz6u4cE//Z
</value>
  </data>
</root>